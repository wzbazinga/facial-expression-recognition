name: "ferNet"
layer{
    name:"fer" 
    type:"Data"
    top:"data"
    top:"label"
    include{
        phase:TRAIN
    }
    transform_param{
        scale: 1.0
    }
    data_param{
        source: "fer2013/fer_test_lmdb"
        batch_size:287
        backend:LMDB
    }
}

layer{
    name:"fer"
    type:"Data"
    top:"data"
    top:"label"
    include{
        phase:TEST
    }
    transform_param{
        scale: 1.0
    }
    data_param{
        source: "fer2013/fer_validate_lmdb"
        batch_size:35
        backend:LMDB
    }
}

layer{
    name: "conv1"
    type: "Convolution"
    bottom: "data"
    top: "conv1"
    param{
        lr_mult: 1
    }
    param{
        lr_mult: 2
    }
    convolution_param{
        num_output: 10
        kernel_size: 3
        stride: 1
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type:"constant"
        }
    }
}

layer{
    name:"pool1"
    type: "Pooling"
    bottom: "conv1"
    top: "pool1"
    pooling_param{
        pool: MAX
        kernel_size:2
        stride: 2
    }
}

layer{
    name: "conv2"
    type: "Convolution"
    bottom: "pool1"
    top: "conv2"
    param{
        lr_mult:1
    }  
    param{
        lr_mult:2
    }
    convolution_param{
        num_output:20
        kernel_size:5
        stride: 1
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type: "constant"
        }
    }
}

layer{
    name: "pool2"
    type: "Pooling"
    bottom: "conv2"
    top: "pool2"
    pooling_param{
        pool: MAX
        kernel_size:2
        stride:2
    }
}

layer{
    name: "ip1"
    type: "InnerProduct"
    bottom: "pool2"
    top: "ip1"
    param{
        lr_mult:1
    }
    param{
        lr_mult:2
    }
    inner_product_param{
        num_output: 100
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type:"constant"
        }
    }
}

layer{
    name: "relu1"
    type: "ReLU"
    bottom: "ip1"
    top:"ip1"
}

layer{
    name: "ip2"
    type: "InnerProduct"
    bottom: "ip1"
    top: "ip2"
    param{
        lr_mult:1
    }
    param{
        lr_mult:2
    }
    inner_product_param{
        num_output:7
        weight_filler{
            type:"xavier"
        }
        bias_filler{
            type:"constant"
        }
    }
}

layer{
    name: "accuracy"
    type: "Accuracy"
    bottom: "ip2"
    bottom: "label"
    top: "accuracy"
    include {
        phase:TEST
    }
}

layer{
    name:"loss"
    type:"SoftmaxWithLoss"
    bottom: "ip2"
    bottom: "label"
    top:"loss"
}
