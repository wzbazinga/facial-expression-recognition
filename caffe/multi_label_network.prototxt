name: "ferNet"
layer{
    name:"data"
    type:"Data"
    top:"data"
    include{
        phase:TRAIN
    }
    data_param{
        source: "fer2013+/train"
        batch_size:64
        backend:LMDB
    }
    transform_param{
        scale:0.00390625
        mean_file: "fer2013+/train.binaryproto"
        mirror: 1
    }
}
layer{
    name:"label"
    type:"Data"
    top:"label"
    include{
        phase:TRAIN
    }
    data_param{
        source: "fer2013+/train_labels"
        batch_size:64
        backend:LMDB
    }
}

layer{
    name:"data"
    type:"Data"
    top:"data"
    include{
        phase:TEST
    }
    data_param{
        source: "fer2013+/test"
        batch_size:28
        backend:LMDB
    }
    transform_param{
        scale:0.00390625
        mean_file: "fer2013+/train.binaryproto"
    }
}
layer{
    name:"label"
    type:"Data"
    top:"label"
    include{
        phase:TEST
    }
    data_param{
        source: "fer2013+/test_labels"
        batch_size:28
        backend:LMDB
    }
}

layer{
    name:"norm"
    type:"BatchNorm"
    bottom:"data"
    top:"norm"
    include{
        phase:TRAIN
    }
    batch_norm_param{
        use_global_stats:0
    }
}

layer{
    name:"norm"
    type:"BatchNorm"
    bottom:"data"
    top:"norm"
    include{
        phase:TEST
    }
    batch_norm_param{
        use_global_stats:1
    }
}

layer{
    name: "conv1"
    type: "Convolution"
    bottom: "norm"
    top: "conv1"
    param{
        lr_mult: 1
    }
    param{
        lr_mult: 2
    }
    convolution_param{
        num_output: 64
        kernel_size: 5
        stride: 1
        pad: 2
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type:"constant"
        }
    }
}

layer{
    name:"pool1"
    type: "Pooling"
    bottom: "conv1"
    top: "pool1"
    pooling_param{
        pool: MAX
	    engine: CAFFE
        kernel_size:2
        stride: 2
    }
}

layer{
    name: "conv2"
    type: "Convolution"
    bottom: "pool1"
    top: "conv2"
    param{
        lr_mult:1
    }
    param{
        lr_mult:2
    }
    convolution_param{
        num_output:64
        kernel_size:3
        stride: 1
        pad: 1
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type: "constant"
        }
    }
}

layer{
    name: "relu1"
    type: "ReLU"
    bottom: "conv2"
    top: "conv2"

}

layer{
    name: "conv3"
    type: "Convolution"
    bottom: "conv2"
    top: "conv3"
    param{
        lr_mult:1
    }
    param{
        lr_mult:2
    }
    convolution_param{
        num_output:128
        kernel_size:3
        stride: 1
        pad: 1
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type: "constant"
        }
    }
}

layer{
    name: "pool2"
    type: "Pooling"
    bottom: "conv3"
    top: "pool2"
    pooling_param{
        pool: MAX
	engine: CAFFE
        kernel_size:2
        stride:2
    }
}

layer{
    name: "conv4"
    type: "Convolution"
    bottom: "pool2"
    top: "conv4"
    param{
        lr_mult:1
    }
    param{
        lr_mult:2
    }
    convolution_param{
        num_output:128
        kernel_size:3
        stride: 1
        pad: 1
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type: "constant"
        }
    }
}

layer{
    name: "relu2"
    type: "ReLU"
    bottom: "conv4"
    top: "conv4"

}

layer{
    name: "conv5"
    type: "Convolution"
    bottom: "conv4"
    top: "conv5"
    param{
        lr_mult:1
    }
    param{
        lr_mult:2
    }
    convolution_param{
        num_output:128
        kernel_size:3
        stride: 1
        pad: 1
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type: "constant"
        }
    }
}

layer{
    name: "pool3"
    type: "Pooling"
    bottom: "conv5"
    top: "pool3"
    pooling_param{
        pool: MAX
        engine: CAFFE
        kernel_size:2
        stride:2
    }
}

layer{
    name: "ip1"
    type: "InnerProduct"
    bottom: "pool3"
    top: "ip1"
    param{
        lr_mult:1
    }
    param{
        lr_mult:2
    }
    inner_product_param{
        num_output: 1024
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type:"constant"
        }
    }
}

layer {
    name: "drop1"
    type: "Dropout"
    bottom: "ip1"
    top: "ip1"
    dropout_param {
        dropout_ratio: 0.5
    }
}

layer{
    name:"relu3"
    type:"ReLU"
    bottom:"ip1"
    top:"ip1"
}

layer{
    name: "ip2"
    type: "InnerProduct"
    bottom: "ip1"
    top: "ip2"
    param{
        lr_mult:1
    }
    param{
        lr_mult:2
    }
    inner_product_param{
        num_output: 1024
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type:"constant"
        }
    }
}
layer {
    name: "drop2"
    type: "Dropout"
    bottom: "ip2"
    top: "ip2"
    dropout_param {
        dropout_ratio: 0.5
    }
}
layer{
    name:"relu4"
    type:"ReLU"
    bottom:"ip2"
    top:"ip2"
}

layer{
    name: "ip3"
    type: "InnerProduct"
    bottom: "ip2"
    top: "ip3"
    param{
        lr_mult:1
    }
    param{
        lr_mult:2
    }
    inner_product_param{
        num_output:8
        weight_filler{
            type:"xavier"
        }
        bias_filler{
            type:"constant"
        }
    }
}

layer {
    name: "prob"
    type: "Softmax"
    bottom: "ip3"
    top: "prob"
}

layer {
    name: "argmax"
    type: "ArgMax"
    bottom: "label"
    top: "argmax"
    include {
        phase: TEST
    }
}

layer{
    name: "accuracy"
    type: "Accuracy"
    bottom: "ip3"
    bottom: "argmax"
    top: "accuracy"
    include {
        phase:TEST
    }
}

layer{
    name: "accuracy2"
    type: "Accutacy"
    bottom: "ip3"
    bottom: "argmax"
    top: "accuracy2"
    accuracy_param{
        top_k:2
    }
    include{
        phase: TEST
    }
}

layer{
    name: "loss"
    type: "SigmoidCrossEntropyLoss"
    bottom: "prob"
    bottom: "label"
    top: "loss"
}
